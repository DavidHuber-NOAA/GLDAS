#!/bin/ksh
set -x
###################################################################
# This script runs the global land analysis
# Usage: exgdas_gldas.sh.ecf
#
# Imported variables:
# GDATE - GLDAS run end date 
# DATA  - top run directory
#
# Configuration variables:
# HOMEgldas - software directory
# RUNDIR    - daily run directory
# 
# History:  2019 10 15 Jesse Meng and Youlong Xia, first version
###################################################################
##############################
# Set up the UTILITIES
##############################
utilscript=${utilscript:-/gpfs/dell1/nco/ops/nwprod/prod_util.v1.1.0/ush}
FINDDATE=${FINDDATE:-$utilscript/finddate.sh}

utilexec=${utilexec:-/gpfs/dell1/nco/ops/nwprod/grib_util.v1.1.0/exec}
CNVGRIB=${CNVGRIB:-$utilexec/cnvgrib}
WGRIB=${WGRIB:-$utilexec/wgrib}
WGRIB2=${WGRIB2:-$utilexec/wgrib2}
COPYGB=${COPYGB:-$utilexec/copygb}

##############################
# Set up the run environment
##############################

LISDIR=$HOMEgldas
GDATE=$GDATE
BDATE=`$FINDDATE $GDATE d-3`
DATA=${DATA:-/gpfs/dell2/ptmp/$LOGNAME/tmpnwprd}

RUNDIR=$DATA/gldas.${BDATE}

#############################################################
# execute the script

echo "GLDAS runs from $BDATE $cycle to $GDATE $cycle"

mkdir $RUNDIR
cd $RUNDIR

RUNSTARTDATE=$BDATE
yyyymmdd0=`$FINDDATE $BDATE d-1`
RUNENDDATE=$GDATE

# As CPC precipitation is from 12z to 12z, the script needs to get one more
# day gdas data to disaggregate daily CPC precipitation value to hourly

### define soft directories

GDAS=${DATA}/force
mkdir -p $GDAS

input1=$GDAS/gdas.$RUNSTARTDATE
input2=$GDAS/gdas.$RUNENDDATE

rm -f $RUNDIR/input
mkdir -p $RUNDIR/input
ln -s $GDAS $RUNDIR/input/GDAS

rm -f $RUNDIR/FIX
ln -s $FIXgldas/FIX_T1534 $RUNDIR/FIX
rm -f $RUNDIR/LIS
ln -s $EXECgldas/gldas_${model} $RUNDIR/LIS

### 1) Get all gdas data and 6-tile netcdf restart data -----

yyyymmdd=$yyyymmdd0
while [ $yyyymmdd -le $RUNENDDATE ];do

$HOMEgldas/ush/gldas_get_data.sh $yyyymmdd

yyyymmdd=`sh $FINDDATE $yyyymmdd d+1`
done

### 2) Get CPC daily precip and temporally disaggreated ---

yyyymmdd=$RUNSTARTDATE
while [ $yyyymmdd -lt $RUNENDDATE ];do

$HOMEgldas/ush/gldas_forcing.sh $yyyymmdd

yyyymmdd=`sh $FINDDATE $yyyymmdd d+1`
done

### spatially disaggregated

yyyymmdd=$RUNSTARTDATE

while [ $yyyymmdd -lt $RUNENDDATE ]; do

gds='255 4 3072 1536 89909 0 128 -89909 -117 117 768 0 0 0 0 0 0 0 0 0 255 0 0 0 0 0'
$COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}00 $RUNDIR/cmap.gdas.${yyyymmdd}00
$COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}06 $RUNDIR/cmap.gdas.${yyyymmdd}06
$COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}12 $RUNDIR/cmap.gdas.${yyyymmdd}12
$COPYGB -i3 -g"$gds" -x $GDAS/cpc.$yyyymmdd/precip.gldas.${yyyymmdd}18 $RUNDIR/cmap.gdas.${yyyymmdd}18

yyyymmdd=`sh $FINDDATE $yyyymmdd d+1`

done

### create configure file
${HOMEgldas}/ush/gldas_liscrd.sh $RUNSTARTDATE $RUNENDDATE 1534

### create lsf file

cp ${PARMgldas}/LIS.lsf.tmp LIS.lsf
echo "#BSUB -oo $RUNDIR/LIS.out"   >> LIS.lsf
echo "#BSUB -eo $RUNDIR/LIS.error" >> LIS.lsf
echo "cd $RUNDIR"                  >> LIS.lsf
echo "mpirun -n 112 ./LIS"         >> LIS.lsf

### 3) Produce initials noah.rst from 6-tile gdas restart files ----

### 3a) create gdas2gldas input file ----

echo "create gdas2gldqas input file fort.43 and copy into fort.41"
cp ${HOMEgldas}/parm/gdas2gldas.input fort.43
sed -i -e 's/date/'"$RUNSTARTDATE"'/g' -e 's/cyc/'"$cyc"'/g' fort.43
sed -i 's|/indirect/|'"$input1"'|g' fort.43
sed -i 's|/orogdir/|'"$topodir"'|g' fort.43
sed -i -e 's/noahmp/'"${model}"'/g' fort.43

### 3b) Use gdas2gldas to generate nemsio file and
###     gldas_noah_rst/gldas_noahmp_rst to generate noah.rst ---

LOG_FILE=gdas2gldas.log

OMP_NUM_THREADS=1
bsub -e $LOG_FILE -o $LOG_FILE -q $QUEUE -P $PROJECT_CODE -J gdas2gldas -W 0:05 -x -n 6 \
        -R "span[ptile=6]" -R "affinity[core(${OMP_NUM_THREADS}):distribute=balance]" "$HOMEgldas/ush/gdas2gldas.sh"

rm PET*ESMF_LogFile

LOG_FILE=gldas_rst.log
OMP_NUM_THREADS=1
bsub -e $LOG_FILE -o $LOG_FILE -q $QUEUE -P $PROJECT_CODE -J gldas_rst -W 0:02 -x -n 1 -w 'ended(gdas2gldas)' \
        -R "span[ptile=1]" -R "affinity[core(${OMP_NUM_THREADS}):distribute=balance]" "$HOMEgldas/ush/gldas_rst.sh"

### 4) run noah/noahmp model
bsub<$RUNDIR/LIS.lsf

### 5) using gdas2gldas to generate nemsio file for RUNENDDATE
###    use gldas_post to replace soil moisture and temperature
###    use gldas2gdas to produce 6-tile restart file

cd $RUNDIR

if [ -s fort.41 ]; then
rm -rf fort.41
fi

### 5a) create input file for gdas2gldas

echo "create gdas2gldas input file fort.45, and then cp fort.45 to for.41 to
avoid refill fort.41 in the first step"
cp ${PARMgldas}/gdas2gldas.input fort.45
sed -i -e 's/date/'"$RUNENDDATE"'/g' -e 's/cyc/'"$cyc"'/g' fort.45
sed -i 's|/indirect/|'"$input2"'|g' fort.45
sed -i 's|/orogdir/|'"$topodir"'|g' fort.45
sed -i -e 's/noahmp/'"${model}"'/g' fort.45

### 5b) use gdas2gldas to produce nemsio file

LOG_FILE=gdas2gldas_2nd.log
OMP_NUM_THREADS=1
bsub -e $LOG_FILE -o $LOG_FILE -q $QUEUE -P $PROJECT_CODE -J gdas2gldas_2nd -W 0:05 -x -n 6 -w 'ended(gldas_model)' \
        -R "span[ptile=1]" -R "affinity[core(${OMP_NUM_THREADS}):distribute=balance]" "$HOMEgldas/ush/gdas2gldas_2nd.sh"

### 5c) use gldas_post to replace soil moisture and temperature

yyyy=`echo $RUNENDDATE | cut -c1-4`
gbin=$RUNDIR/EXP901/NOAH/$yyyy/$RUNENDDATE/LIS.E901.${RUNENDDATE}00.NOAHgbin
sfcanl=sfc.gaussian.nemsio

LOG_FILE=gldas_post.log
OMP_NUM_THREADS=1
bsub -e $LOG_FILE -o $LOG_FILE -q $QUEUE -P $PROJECT_CODE -J gldas_post -W 0:05 -x -n 1 -w 'ended(gdas2gldas_2nd)' \
        -R "span[ptile=1]" -R "affinity[core(${OMP_NUM_THREADS}):distribute=balance]" "$HOMEgldas/ush/gldas_post.sh $gbin $sfcanl"

### 5d) use gldas2gdas to create 6-tile restart tiles

echo "create gdas2gldqas input file fort.42"
cp ${PARMgldas}/gldas2gdas.input fort.42
sed -i 's|/orogdir/|'"$topodir"'|g' fort.42

# copy gdas netcdf tiles
gdate=${RUNENDDATE}
gdas_date=${gdate}.${cyc}0000
cp ${GDAS}/gdas.${gdate}/${gdas_date}.sfcanl_data.tile1.nc ./sfc_data.tile1.nc
cp ${GDAS}/gdas.${gdate}/${gdas_date}.sfcanl_data.tile2.nc ./sfc_data.tile2.nc
cp ${GDAS}/gdas.${gdate}/${gdas_date}.sfcanl_data.tile3.nc ./sfc_data.tile3.nc
cp ${GDAS}/gdas.${gdate}/${gdas_date}.sfcanl_data.tile4.nc ./sfc_data.tile4.nc
cp ${GDAS}/gdas.${gdate}/${gdas_date}.sfcanl_data.tile5.nc ./sfc_data.tile5.nc
cp ${GDAS}/gdas.${gdate}/${gdas_date}.sfcanl_data.tile6.nc ./sfc_data.tile6.nc

chmod 744 sfc_data.tile*.nc

# copy soil type
cp ${FIXgldas}/FIX_T1534/stype_gfs_T1534.bfsa  ./stype_gfs_T1534.bfsa

LOG_FILE=gldas2gdas.log
OMP_NUM_THREADS=1
bsub -e $LOG_FILE -o $LOG_FILE -q $QUEUE -P $PROJECT_CODE -J gldas2gdas -W 0:05 -x -n 6 -w 'ended(gldas_post)' \
        -R "span[ptile=1]" -R "affinity[core(${OMP_NUM_THREADS}):distribute=balance]" "$HOMEgldas/ush/gldas2gdas.sh"

### 5e) archive gldas results
LOG_FILE=gldas_archive.log
OMP_NUM_THREADS=1
bsub -e $LOG_FILE -o $LOG_FILE -q $QUEUE -P $PROJECT_CODE -J gldas_archive -W 0:05 -x -n 1 -w 'ended(gldas2gdas)' \
        -R "span[ptile=1]" -R "affinity[core(${OMP_NUM_THREADS}):distribute=balance]" "$HOMEgldas/ush/gldas_archive.sh $RUNSTARTDATE $RUNENDDATE"

echo $RUNDIR

###### gldas_driver.sh ends

msg="$HOMEgldas/scripts/exgdas_gldas.sh.ecf ENDED NORMALLY."
postmsg "$jlogfile" "$msg"

date
